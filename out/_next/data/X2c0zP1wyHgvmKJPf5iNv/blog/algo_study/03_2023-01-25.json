{"pageProps":{"post":{"title":"정렬 알고리즘","date":"January 25, 2023","description":"알고리즘 스터디 3주차 정렬 알고리즘","category":"algorithm, javascript","body":{"raw":"\r\n## 버블 정렬(Bubble Sort)\r\n\r\n<p align=\"center\">\r\n  <img src=\"/images/post/03_2023-01-25/bubble.gif\" alt=\"Bubble Sort\" />\r\n</p>\r\n\r\n인접한 두 원소를 계속해서 비교하며 거품이 수면위로 올라오는 듯한 모습으로 정렬하는 알고리즘\r\n\r\n- O(n²)\r\n\r\n```jsx\r\nconst bubbleSort = (input) => {\r\n  const leng = input.length;\r\n  for (let i = 0; i < leng; i++) {\r\n    for (let j = 0; j < leng; j++) {\r\n      if (input[j] > input[j + 1]) {\r\n        [input[j], input[j + 1]] = [input[j + 1], input[j]];\r\n      }\r\n    }\r\n  }\r\n  return input;\r\n};\r\n```\r\n\r\n## 선택 정렬(Selection Sort)\r\n\r\n<p align=\"center\">\r\n  <img src=\"/images/post/03_2023-01-25/selection.gif\" alt=\"Selection Sort\" />\r\n</p>\r\n\r\n매번 최소값 or 최대값을 찾아 선택하고 알맞은 위치의 요소와 스왑하는 정렬 알고리즘\r\n\r\n- O(n²)\r\n\r\n```jsx\r\nconst selectionSort = (input) => {\r\n  const leng = input.length;\r\n  for (let i = 0; i < leng; i++) {\r\n    let minIndex = i;\r\n    for (let j = i + 1; j < leng; j++) {\r\n      if (input[minIndex] > input[j]) minIndex = j;\r\n    }\r\n    if (minIndex !== i) {\r\n      [input[i], input[minIndex]] = [input[minIndex], input[i]];\r\n    }\r\n  }\r\n  return input;\r\n};\r\n```\r\n\r\n## 삽입 정렬(Insertion Sort)\r\n\r\n<p align=\"center\">\r\n  <img src=\"/images/post/03_2023-01-25/insertion.gif\" alt=\"Insertion Sort\" />\r\n</p>\r\n\r\n데이터를 정렬/비정렬 영역으로 나누고 비정렬 영역의 데이터를 순회하면서 정렬 영역의 적절한 위치에 삽입하는 정렬 알고리즘\r\n\r\n- 최악의 경우 O(n²)\r\n- 최선의 경우 O(n)\r\n\r\n```jsx\r\nconst insertSort = (input) => {\r\n  const leng = input.length;\r\n  for (let i = 1; i < leng; i++) {\r\n    const currentValue = input[i];\r\n    for (let j = i - 1; j >= 0 && input[j] > currentValue; j--) {\r\n      arr[j + 1] = arr[j];\r\n    }\r\n    arr[j + 1] = currentValue;\r\n  }\r\n  return input;\r\n};\r\n```\r\n\r\n## 합병 정렬(Merge Sort)\r\n\r\n<p align=\"center\">\r\n  <img src=\"/images/post/03_2023-01-25/merge.gif\" alt=\"Merge Sort\" />\r\n</p>\r\n\r\n둘 이상의 부분집합으로 나누고 각각을 정렬한 다음, 정렬된 채로 합치는 분할 정복 정렬 알고리즘\r\n\r\n- O(n log n)\r\n\r\n```jsx\r\nconst merge = (left, right) => {\r\n  const result = [];\r\n  while (left.length && right.length) {\r\n    if (left[0] <= right[0]) {\r\n      result.push(left.shift());\r\n    } else {\r\n      result.push(right.shift());\r\n    }\r\n  }\r\n  return [...result, ...left, ...right];\r\n};\r\n\r\nconst mergeSort = (input) => {\r\n  const leng = input.length;\r\n  if (leng < 2) {\r\n    return input;\r\n  }\r\n  const mid = Math.ceil(leng / 2);\r\n  const left = arr.slice(0, mid);\r\n  const right = arr.slice(mid);\r\n  return merge(mergeSort(left), mergeSort(right));\r\n};\r\n```\r\n\r\n## 퀵 정렬(Quick Sort)\r\n\r\n<p align=\"center\">\r\n  <img src=\"/images/post/03_2023-01-25/quick.gif\" alt=\"Quick Sort\" />\r\n</p>\r\n\r\n집합내 임의의 피벗(Pivot)을 정하고, 해당 비벗을 기준으로 두개의 부분 집합으로 나눠 한쪽에는 작은 값, 반대쪽에는 큰값들만 넣는 방식을 재귀적으로 수행하는 정렬 알고리즘\r\n\r\n- 평균, 최선의 경우 O(n log n)\r\n- 최악의 경우 O(n²)\r\n\r\n```jsx\r\nconst quickSort = (input) => {\r\n  const leng = input.length;\r\n  if (leng < 2) {\r\n    return array;\r\n  }\r\n  const pivot = [array[0]];\r\n  const left = [];\r\n  const right = [];\r\n\r\n  for (let i = 1; i < leng; i++) {\r\n    if (array[i] < pivot) {\r\n      left.push(array[i]);\r\n    } else if (array[i] > pivot) {\r\n      right.push(array[i]);\r\n    } else {\r\n      pivot.push(array[i]);\r\n    }\r\n  }\r\n  return [...quickSort(left), ...pivot, ...quickSort(right)];\r\n};\r\n```\r\n","code":"var Component=(()=>{var g=Object.create;var l=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),j=(e,n)=>{for(var i in n)l(e,i,{get:n[i],enumerable:!0})},o=(e,n,i,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of p(n))!m.call(e,t)&&t!==i&&l(e,t,{get:()=>n[t],enumerable:!(c=h(n,t))||c.enumerable});return e};var S=(e,n,i)=>(i=e!=null?g(d(e)):{},o(n||!e||!e.__esModule?l(i,\"default\",{value:e,enumerable:!0}):i,e)),x=e=>o(l({},\"__esModule\",{value:!0}),e);var u=f((v,s)=>{s.exports=_jsx_runtime});var O={};j(O,{default:()=>y,frontmatter:()=>b});var r=S(u()),b={title:\"\\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\",date:\"January 25, 2023\",description:\"\\uC54C\\uACE0\\uB9AC\\uC998 \\uC2A4\\uD130\\uB514 3\\uC8FC\\uCC28 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\",category:\"algorithm, javascript\"};function a(e){let n=Object.assign({h2:\"h2\",p:\"p\",ul:\"ul\",li:\"li\",pre:\"pre\",code:\"code\"},e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{children:\"\\uBC84\\uBE14 \\uC815\\uB82C(Bubble Sort)\"}),`\n`,(0,r.jsx)(\"p\",{align:\"center\",children:(0,r.jsx)(\"img\",{src:\"/images/post/03_2023-01-25/bubble.gif\",alt:\"Bubble Sort\"})}),`\n`,(0,r.jsx)(n.p,{children:\"\\uC778\\uC811\\uD55C \\uB450 \\uC6D0\\uC18C\\uB97C \\uACC4\\uC18D\\uD574\\uC11C \\uBE44\\uAD50\\uD558\\uBA70 \\uAC70\\uD488\\uC774 \\uC218\\uBA74\\uC704\\uB85C \\uC62C\\uB77C\\uC624\\uB294 \\uB4EF\\uD55C \\uBAA8\\uC2B5\\uC73C\\uB85C \\uC815\\uB82C\\uD558\\uB294 \\uC54C\\uACE0\\uB9AC\\uC998\"}),`\n`,(0,r.jsxs)(n.ul,{children:[`\n`,(0,r.jsx)(n.li,{children:\"O(n\\xB2)\"}),`\n`]}),`\n`,(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:\"language-jsx\",children:`const bubbleSort = (input) => {\\r\n  const leng = input.length;\\r\n  for (let i = 0; i < leng; i++) {\\r\n    for (let j = 0; j < leng; j++) {\\r\n      if (input[j] > input[j + 1]) {\\r\n        [input[j], input[j + 1]] = [input[j + 1], input[j]];\\r\n      }\\r\n    }\\r\n  }\\r\n  return input;\\r\n};\n`})}),`\n`,(0,r.jsx)(n.h2,{children:\"\\uC120\\uD0DD \\uC815\\uB82C(Selection Sort)\"}),`\n`,(0,r.jsx)(\"p\",{align:\"center\",children:(0,r.jsx)(\"img\",{src:\"/images/post/03_2023-01-25/selection.gif\",alt:\"Selection Sort\"})}),`\n`,(0,r.jsx)(n.p,{children:\"\\uB9E4\\uBC88 \\uCD5C\\uC18C\\uAC12 or \\uCD5C\\uB300\\uAC12\\uC744 \\uCC3E\\uC544 \\uC120\\uD0DD\\uD558\\uACE0 \\uC54C\\uB9DE\\uC740 \\uC704\\uCE58\\uC758 \\uC694\\uC18C\\uC640 \\uC2A4\\uC651\\uD558\\uB294 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\"}),`\n`,(0,r.jsxs)(n.ul,{children:[`\n`,(0,r.jsx)(n.li,{children:\"O(n\\xB2)\"}),`\n`]}),`\n`,(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:\"language-jsx\",children:`const selectionSort = (input) => {\\r\n  const leng = input.length;\\r\n  for (let i = 0; i < leng; i++) {\\r\n    let minIndex = i;\\r\n    for (let j = i + 1; j < leng; j++) {\\r\n      if (input[minIndex] > input[j]) minIndex = j;\\r\n    }\\r\n    if (minIndex !== i) {\\r\n      [input[i], input[minIndex]] = [input[minIndex], input[i]];\\r\n    }\\r\n  }\\r\n  return input;\\r\n};\n`})}),`\n`,(0,r.jsx)(n.h2,{children:\"\\uC0BD\\uC785 \\uC815\\uB82C(Insertion Sort)\"}),`\n`,(0,r.jsx)(\"p\",{align:\"center\",children:(0,r.jsx)(\"img\",{src:\"/images/post/03_2023-01-25/insertion.gif\",alt:\"Insertion Sort\"})}),`\n`,(0,r.jsx)(n.p,{children:\"\\uB370\\uC774\\uD130\\uB97C \\uC815\\uB82C/\\uBE44\\uC815\\uB82C \\uC601\\uC5ED\\uC73C\\uB85C \\uB098\\uB204\\uACE0 \\uBE44\\uC815\\uB82C \\uC601\\uC5ED\\uC758 \\uB370\\uC774\\uD130\\uB97C \\uC21C\\uD68C\\uD558\\uBA74\\uC11C \\uC815\\uB82C \\uC601\\uC5ED\\uC758 \\uC801\\uC808\\uD55C \\uC704\\uCE58\\uC5D0 \\uC0BD\\uC785\\uD558\\uB294 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\"}),`\n`,(0,r.jsxs)(n.ul,{children:[`\n`,(0,r.jsx)(n.li,{children:\"\\uCD5C\\uC545\\uC758 \\uACBD\\uC6B0 O(n\\xB2)\"}),`\n`,(0,r.jsx)(n.li,{children:\"\\uCD5C\\uC120\\uC758 \\uACBD\\uC6B0 O(n)\"}),`\n`]}),`\n`,(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:\"language-jsx\",children:`const insertSort = (input) => {\\r\n  const leng = input.length;\\r\n  for (let i = 1; i < leng; i++) {\\r\n    const currentValue = input[i];\\r\n    for (let j = i - 1; j >= 0 && input[j] > currentValue; j--) {\\r\n      arr[j + 1] = arr[j];\\r\n    }\\r\n    arr[j + 1] = currentValue;\\r\n  }\\r\n  return input;\\r\n};\n`})}),`\n`,(0,r.jsx)(n.h2,{children:\"\\uD569\\uBCD1 \\uC815\\uB82C(Merge Sort)\"}),`\n`,(0,r.jsx)(\"p\",{align:\"center\",children:(0,r.jsx)(\"img\",{src:\"/images/post/03_2023-01-25/merge.gif\",alt:\"Merge Sort\"})}),`\n`,(0,r.jsx)(n.p,{children:\"\\uB458 \\uC774\\uC0C1\\uC758 \\uBD80\\uBD84\\uC9D1\\uD569\\uC73C\\uB85C \\uB098\\uB204\\uACE0 \\uAC01\\uAC01\\uC744 \\uC815\\uB82C\\uD55C \\uB2E4\\uC74C, \\uC815\\uB82C\\uB41C \\uCC44\\uB85C \\uD569\\uCE58\\uB294 \\uBD84\\uD560 \\uC815\\uBCF5 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\"}),`\n`,(0,r.jsxs)(n.ul,{children:[`\n`,(0,r.jsx)(n.li,{children:\"O(n log n)\"}),`\n`]}),`\n`,(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:\"language-jsx\",children:`const merge = (left, right) => {\\r\n  const result = [];\\r\n  while (left.length && right.length) {\\r\n    if (left[0] <= right[0]) {\\r\n      result.push(left.shift());\\r\n    } else {\\r\n      result.push(right.shift());\\r\n    }\\r\n  }\\r\n  return [...result, ...left, ...right];\\r\n};\\r\n\\r\nconst mergeSort = (input) => {\\r\n  const leng = input.length;\\r\n  if (leng < 2) {\\r\n    return input;\\r\n  }\\r\n  const mid = Math.ceil(leng / 2);\\r\n  const left = arr.slice(0, mid);\\r\n  const right = arr.slice(mid);\\r\n  return merge(mergeSort(left), mergeSort(right));\\r\n};\n`})}),`\n`,(0,r.jsx)(n.h2,{children:\"\\uD035 \\uC815\\uB82C(Quick Sort)\"}),`\n`,(0,r.jsx)(\"p\",{align:\"center\",children:(0,r.jsx)(\"img\",{src:\"/images/post/03_2023-01-25/quick.gif\",alt:\"Quick Sort\"})}),`\n`,(0,r.jsx)(n.p,{children:\"\\uC9D1\\uD569\\uB0B4 \\uC784\\uC758\\uC758 \\uD53C\\uBC97(Pivot)\\uC744 \\uC815\\uD558\\uACE0, \\uD574\\uB2F9 \\uBE44\\uBC97\\uC744 \\uAE30\\uC900\\uC73C\\uB85C \\uB450\\uAC1C\\uC758 \\uBD80\\uBD84 \\uC9D1\\uD569\\uC73C\\uB85C \\uB098\\uB220 \\uD55C\\uCABD\\uC5D0\\uB294 \\uC791\\uC740 \\uAC12, \\uBC18\\uB300\\uCABD\\uC5D0\\uB294 \\uD070\\uAC12\\uB4E4\\uB9CC \\uB123\\uB294 \\uBC29\\uC2DD\\uC744 \\uC7AC\\uADC0\\uC801\\uC73C\\uB85C \\uC218\\uD589\\uD558\\uB294 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\"}),`\n`,(0,r.jsxs)(n.ul,{children:[`\n`,(0,r.jsx)(n.li,{children:\"\\uD3C9\\uADE0, \\uCD5C\\uC120\\uC758 \\uACBD\\uC6B0 O(n log n)\"}),`\n`,(0,r.jsx)(n.li,{children:\"\\uCD5C\\uC545\\uC758 \\uACBD\\uC6B0 O(n\\xB2)\"}),`\n`]}),`\n`,(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:\"language-jsx\",children:`const quickSort = (input) => {\\r\n  const leng = input.length;\\r\n  if (leng < 2) {\\r\n    return array;\\r\n  }\\r\n  const pivot = [array[0]];\\r\n  const left = [];\\r\n  const right = [];\\r\n\\r\n  for (let i = 1; i < leng; i++) {\\r\n    if (array[i] < pivot) {\\r\n      left.push(array[i]);\\r\n    } else if (array[i] > pivot) {\\r\n      right.push(array[i]);\\r\n    } else {\\r\n      pivot.push(array[i]);\\r\n    }\\r\n  }\\r\n  return [...quickSort(left), ...pivot, ...quickSort(right)];\\r\n};\n`})})]})}function _(e={}){let{wrapper:n}=e.components||{};return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(a,e)})):a(e)}var y=_;return x(O);})();\n;return Component;"},"_id":"algo_study/03_2023-01-25.mdx","_raw":{"sourceFilePath":"algo_study/03_2023-01-25.mdx","sourceFileName":"03_2023-01-25.mdx","sourceFileDir":"algo_study","contentType":"mdx","flattenedPath":"algo_study/03_2023-01-25"},"type":"Post","url":"/blog/algo_study/03_2023-01-25"}},"__N_SSG":true}