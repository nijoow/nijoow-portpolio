{"pageProps":{"post":{"title":"주소 검색 라이브러리 react-daum-postcode","date":"August 10, 2022","description":"react-daum-postcode는 React 환경에서 Daum 우편번호 검색 서비스를 간편하게 이용할 수 있는 라이브러리 패키지입니다.","category":"react, library","body":{"raw":"\r\nimport { prefix } from \"../config/config\";\r\n\r\nreact-daum-postcode는 React 환경에서 Daum 우편번호 검색 서비스를 간편하게 이용할\r\n수 있는 라이브러리 패키지입니다.\r\n\r\n<img\r\n  src={`${prefix}/posts/library/library-01_2022-08-10_daum-post-code.png`}\r\n  alt=\"daum-postcode\"\r\n  style={{ width: \"100%\" }}\r\n/>\r\n\r\n### Install\r\n\r\n```\r\nnpm install react-daum-postcode\r\nyarn add react-daum-postcode\r\n```\r\n\r\n### Embed\r\n\r\n`DaumPostcodeEmbed` 컴포넌트를 사용하여, 우편번호 검색 서비스를 임베드 방식으로 사용할 수 있습니다.\r\n\r\n```jsx\r\n// Postcode.jsx\r\nimport React from \"react\";\r\nimport DaumPostcodeEmbed from \"react-daum-postcode\";\r\n\r\nconst Postcode = ({ address, setAddress }) => {\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = \"\";\r\n\r\n    // 도로명 주소와 함께 법정동/법정리/건물명이 있는 경우 전체 주소로 합쳐주는 과정\r\n    if (data.addressType === \"R\") {\r\n      if (data.bname !== \"\") {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== \"\") {\r\n        extraAddress +=\r\n          extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\r\n    }\r\n\r\n    setAddress({\r\n      ...address,\r\n      fullAddress: fullAddress,\r\n      postcode: data.zonecode,\r\n    });\r\n  };\r\n\r\n  return <DaumPostcodeEmbed onComplete={handleComplete} />;\r\n};\r\n```\r\n\r\n```jsx\r\n// AddressForm.jsx\r\nimport { useState } from \"react\";\r\nimport Postcode from \"./Postcode\";\r\n\r\nconst AddressForm = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [address, setAddress] = useState({\r\n    fullAddress: undefined,\r\n    postcode: undefined,\r\n    detailAddress: undefined,\r\n  });\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"우편번호\"\r\n        value={address.postcode}\r\n        readOnly\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"주소\"\r\n        value={address.fullAddress}\r\n        readOnly\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"상세주소\"\r\n        value={address.detailAddress}\r\n        onChange={(e) =>\r\n          setAddress({ ...address, detailAddress: e.target.value })\r\n        }\r\n      />\r\n      <button onClick={() => setModalOpen(!modalOpen)}>주소찾기</button>\r\n      {modalOpen && <Postcode address={address} setAddress={setAddress} />}\r\n    </form>\r\n  );\r\n};\r\n```\r\n\r\npostcode의 자세한 생성자 속성들은 <a href=\"https://postcode.map.daum.net/guide\" target=\"_blank\">Daum 우편번호 서비스 가이드</a>를 참고해주세요!\r\n\r\n<br />\r\n\r\n> ### **Reference**\r\n>\r\n> - <a href=\"https://www.npmjs.com/package/react-daum-postcode\" target=\"_blank\">\r\n>     react-daum-postcode - npm\r\n>   </a>\r\n> - <a href=\"https://postcode.map.daum.net/guide\" target=\"_blank\">\r\n>     Daum 우편번호 서비스 가이드\r\n>   </a>\r\n","code":"var Component=(()=>{var m=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),x=(n,e)=>{for(var d in e)s(n,d,{get:e[d],enumerable:!0})},o=(n,e,d,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of h(e))!g.call(n,t)&&t!==d&&s(n,t,{get:()=>e[t],enumerable:!(a=u(e,t))||a.enumerable});return n};var A=(n,e,d)=>(d=n!=null?m(f(n)):{},o(e||!n||!n.__esModule?s(d,\"default\",{value:n,enumerable:!0}):d,n)),j=n=>o(s({},\"__esModule\",{value:!0}),n);var l=b((P,c)=>{c.exports=_jsx_runtime});var O={};x(O,{default:()=>D,frontmatter:()=>y});var r=A(l());var i=void 0===\"production\"?\"https://nijoow.github.io/\":\"\";var y={title:\"\\uC8FC\\uC18C \\uAC80\\uC0C9 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC react-daum-postcode\",date:\"August 10, 2022\",description:\"react-daum-postcode\\uB294 React \\uD658\\uACBD\\uC5D0\\uC11C Daum \\uC6B0\\uD3B8\\uBC88\\uD638 \\uAC80\\uC0C9 \\uC11C\\uBE44\\uC2A4\\uB97C \\uAC04\\uD3B8\\uD558\\uAC8C \\uC774\\uC6A9\\uD560 \\uC218 \\uC788\\uB294 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC \\uD328\\uD0A4\\uC9C0\\uC785\\uB2C8\\uB2E4.\",category:\"react, library\"};function p(n){let e=Object.assign({p:\"p\",h3:\"h3\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\",strong:\"strong\",ul:\"ul\",li:\"li\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:`react-daum-postcode\\uB294 React \\uD658\\uACBD\\uC5D0\\uC11C Daum \\uC6B0\\uD3B8\\uBC88\\uD638 \\uAC80\\uC0C9 \\uC11C\\uBE44\\uC2A4\\uB97C \\uAC04\\uD3B8\\uD558\\uAC8C \\uC774\\uC6A9\\uD560\\r\n\\uC218 \\uC788\\uB294 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC \\uD328\\uD0A4\\uC9C0\\uC785\\uB2C8\\uB2E4.`}),`\n`,(0,r.jsx)(\"img\",{src:`${i}/posts/library/library-01_2022-08-10_daum-post-code.png`,alt:\"daum-postcode\",style:{width:\"100%\"}}),`\n`,(0,r.jsx)(e.h3,{children:\"Install\"}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:`npm install react-daum-postcode\\r\nyarn add react-daum-postcode\n`})}),`\n`,(0,r.jsx)(e.h3,{children:\"Embed\"}),`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:\"DaumPostcodeEmbed\"}),\" \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC, \\uC6B0\\uD3B8\\uBC88\\uD638 \\uAC80\\uC0C9 \\uC11C\\uBE44\\uC2A4\\uB97C \\uC784\\uBCA0\\uB4DC \\uBC29\\uC2DD\\uC73C\\uB85C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`// Postcode.jsx\\r\nimport React from \"react\";\\r\nimport DaumPostcodeEmbed from \"react-daum-postcode\";\\r\n\\r\nconst Postcode = ({ address, setAddress }) => {\\r\n  const handleComplete = (data) => {\\r\n    let fullAddress = data.address;\\r\n    let extraAddress = \"\";\\r\n\\r\n    // \\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C\\uC640 \\uD568\\uAED8 \\uBC95\\uC815\\uB3D9/\\uBC95\\uC815\\uB9AC/\\uAC74\\uBB3C\\uBA85\\uC774 \\uC788\\uB294 \\uACBD\\uC6B0 \\uC804\\uCCB4 \\uC8FC\\uC18C\\uB85C \\uD569\\uCCD0\\uC8FC\\uB294 \\uACFC\\uC815\\r\n    if (data.addressType === \"R\") {\\r\n      if (data.bname !== \"\") {\\r\n        extraAddress += data.bname;\\r\n      }\\r\n      if (data.buildingName !== \"\") {\\r\n        extraAddress +=\\r\n          extraAddress !== \"\" ? \\`, \\${data.buildingName}\\` : data.buildingName;\\r\n      }\\r\n      fullAddress += extraAddress !== \"\" ? \\` (\\${extraAddress})\\` : \"\";\\r\n    }\\r\n\\r\n    setAddress({\\r\n      ...address,\\r\n      fullAddress: fullAddress,\\r\n      postcode: data.zonecode,\\r\n    });\\r\n  };\\r\n\\r\n  return <DaumPostcodeEmbed onComplete={handleComplete} />;\\r\n};\n`})}),`\n`,(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:\"language-jsx\",children:`// AddressForm.jsx\\r\nimport { useState } from \"react\";\\r\nimport Postcode from \"./Postcode\";\\r\n\\r\nconst AddressForm = () => {\\r\n  const [modalOpen, setModalOpen] = useState(false);\\r\n  const [address, setAddress] = useState({\\r\n    fullAddress: undefined,\\r\n    postcode: undefined,\\r\n    detailAddress: undefined,\\r\n  });\\r\n  return (\\r\n    <form>\\r\n      <input\\r\n        type=\"number\"\\r\n        placeholder=\"\\uC6B0\\uD3B8\\uBC88\\uD638\"\\r\n        value={address.postcode}\\r\n        readOnly\\r\n      />\\r\n      <input\\r\n        type=\"text\"\\r\n        placeholder=\"\\uC8FC\\uC18C\"\\r\n        value={address.fullAddress}\\r\n        readOnly\\r\n      />\\r\n      <input\\r\n        type=\"text\"\\r\n        placeholder=\"\\uC0C1\\uC138\\uC8FC\\uC18C\"\\r\n        value={address.detailAddress}\\r\n        onChange={(e) =>\\r\n          setAddress({ ...address, detailAddress: e.target.value })\\r\n        }\\r\n      />\\r\n      <button onClick={() => setModalOpen(!modalOpen)}>\\uC8FC\\uC18C\\uCC3E\\uAE30</button>\\r\n      {modalOpen && <Postcode address={address} setAddress={setAddress} />}\\r\n    </form>\\r\n  );\\r\n};\n`})}),`\n`,(0,r.jsxs)(e.p,{children:[\"postcode\\uC758 \\uC790\\uC138\\uD55C \\uC0DD\\uC131\\uC790 \\uC18D\\uC131\\uB4E4\\uC740 \",(0,r.jsx)(\"a\",{href:\"https://postcode.map.daum.net/guide\",target:\"_blank\",children:\"Daum \\uC6B0\\uD3B8\\uBC88\\uD638 \\uC11C\\uBE44\\uC2A4 \\uAC00\\uC774\\uB4DC\"}),\"\\uB97C \\uCC38\\uACE0\\uD574\\uC8FC\\uC138\\uC694!\"]}),`\n`,(0,r.jsx)(\"br\",{}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsx)(e.h3,{children:(0,r.jsx)(e.strong,{children:\"Reference\"})}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(\"a\",{href:\"https://www.npmjs.com/package/react-daum-postcode\",target:\"_blank\",children:(0,r.jsx)(e.p,{children:\"react-daum-postcode - npm\"})}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(\"a\",{href:\"https://postcode.map.daum.net/guide\",target:\"_blank\",children:(0,r.jsx)(e.p,{children:\"Daum \\uC6B0\\uD3B8\\uBC88\\uD638 \\uC11C\\uBE44\\uC2A4 \\uAC00\\uC774\\uB4DC\"})}),`\n`]}),`\n`]}),`\n`]})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(p,n)})):p(n)}var D=_;return j(O);})();\n;return Component;"},"_id":"library-01_2022-08-10.mdx","_raw":{"sourceFilePath":"library-01_2022-08-10.mdx","sourceFileName":"library-01_2022-08-10.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"library-01_2022-08-10"},"type":"Post","url":"/blog/library-01_2022-08-10"}},"__N_SSG":true}