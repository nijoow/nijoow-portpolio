/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Nijoow() {
  const group = useRef()
  const [isClicked, setIsClicked] = useState(false)
  const { nodes, materials } = useGLTF('/3D/nijoowPurple.glb')
  useFrame(() => {
    !isClicked && (group.current.rotation.y += 0.004)
  })

  return (
    <group
      ref={group}
      dispose={null}
      onPointerDown={(event) => {
        event.stopPropagation()
        event.target.setPointerCapture(event.pointerId)
        setIsClicked(true)
      }}
      onPointerUp={(event) => {
        event.stopPropagation()
        event.target.releasePointerCapture(event.pointerId)
        setIsClicked(false)
      }}
    >
      <mesh
        geometry={nodes.Curve003.geometry}
        material={materials['Material.001']}
        rotation={[Math.PI / 2, 0, 0]}
        scale={30}
      />
    </group>
  )
}

useGLTF.preload('/3D/nijoow.glb')
